<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EC5.Utility.Web</name>
    </assembly>
    <members>
        <member name="M:EC5.Utility.Web.WebDirectory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
            <summary>
            创建指定路径中的所有目录，并应用指定的 Windows 安全性。
            </summary>
            <param name="path">要创建的目录。</param>
            <param name="directorySecurity"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebDirectory.CreateDirectory(System.String)">
            <summary>
            按 path 的指定创建所有目录和子目录。
            </summary>
            <param name="path">要创建的目录。</param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebDirectory.Delete(System.String,System.Boolean)">
            <summary>
            删除指定的目录并（如果指示）删除该目录中的任何子目录。
            </summary>
            <param name="path">要移除的目录的名称。</param>
            <param name="recursive">若要移除 path 中的目录、子目录和文件，则为 true；否则为 false。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebDirectory.Delete(System.String)">
            <summary>
            从指定路径删除空目录。 
            </summary>
            <param name="path">要移除的目录的名称。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebDirectory.Exists(System.String)">
            <summary>
            确定给定路径是否引用磁盘上的现有目录。 
            </summary>
            <param name="path">要测试的路径。</param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebDirectory.GetFiles(System.String,System.String,System.IO.SearchOption)">
            <summary>
            返回指定目录中文件的名称，该目录与指定搜索模式匹配并使用某个值确定是否在子目录中搜索。
            </summary>
            <param name="path">要搜索的目录。</param>
            <param name="searchPattern">要与 path 中的文件名匹配的搜索字符串。此参数不能以两个句点（“..”）结束，不能在 DirectorySeparatorChar 或 AltDirectorySeparatorChar 的前面包含两个句点（“..”），也不能包含 InvalidPathChars 中的任何字符。</param>
            <param name="searchOption">SearchOption 值之一，指定搜索操作应包括所有子目录还是仅包括当前目录。</param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebDirectory.GetFiles(System.String,System.String)">
            <summary>
            返回指定目录中与指定搜索模式匹配的文件的名称。
            </summary>
            <param name="path">将从其检索文件的目录。</param>
            <param name="searchPattern"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebDirectory.GetFiles(System.String)">
            <summary>
            返回指定目录中的文件的名称。 
            </summary>
            <param name="path">将从其检索文件的目录。</param>
            <returns></returns>
        </member>
        <member name="T:EC5.Utility.Web.WebFile">
            <summary>
            文件
            </summary>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.AutoCreateDirectory(System.String)">
            <summary>
            自动创建目录路径
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.ReadAllBytes(System.String)">
            <summary>
            已重载。 将指定的字符串追加到文件中，如果文件还不存在则创建该文件。 
            </summary>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.ReadAllLines(System.String)">
            <summary>
            打开一个文本文件，读取文件的所有行，然后关闭该文件。 
            </summary>
            <param name="path">要打开以进行读取的文件。 </param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.ReadAllLines(System.String,System.Text.Encoding)">
            <summary>
            打开一个文本文件，读取文件的所有行，然后关闭该文件。 
            </summary>
            <param name="path">要打开以进行读取的文件。</param>
            <param name="encoding">应用到文件内容的编码。</param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.ReadAllText(System.String)">
            <summary>
            打开一个文件，使用指定的编码读取文件的所有行，然后关闭该文件。 
            </summary>
            <param name="path">要打开以进行读取的文件。</param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.ReadAllText(System.String,System.Text.Encoding)">
            <summary>
            打开一个文件，使用指定的编码读取文件的所有行，然后关闭该文件。 
            </summary>
            <param name="path">要打开以进行读取的文件。</param>
            <param name="encoding">应用到文件内容的编码。</param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            创建一个新文件，在其中写入指定的字节数组，然后关闭该文件。如果目标文件已存在，则改写该文件。 
            </summary>
            <param name="path">要写入的文件。</param>
            <param name="bytes">要写入文件的字节。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
            <summary>
            创建一个新文件，在其中写入指定的字节数组，然后关闭该文件。如果目标文件已存在，则改写该文件。 
            </summary>
            <param name="path">要写入的文件。</param>
            <param name="bytes">要写入文件的字节。</param>
            <param name="autoCreateDir">如果目录不存在，自动创建目录。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.WriteAllLines(System.String,System.String[])">
            <summary>
            创建一个新文件，使用指定的编码在其中写入指定的字符串数组，然后关闭文件。如果目标文件已存在，则改写该文件。
            </summary>
            <param name="path">要写入的文件。</param>
            <param name="contents">要写入文件的字符串数组。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.WriteAllLines(System.String,System.String[],System.Boolean)">
            <summary>
            创建一个新文件，使用指定的编码在其中写入指定的字符串数组，然后关闭文件。如果目标文件已存在，则改写该文件。
            </summary>
            <param name="path">要写入的文件。</param>
            <param name="contents">要写入文件的字符串数组。</param>
            <param name="autoCreateDir">如果目录不存在，自动创建目录。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
            <summary>
            创建一个新文件，使用指定的编码在其中写入指定的字符串数组，然后关闭文件。如果目标文件已存在，则改写该文件。
            </summary>
            <param name="path">要写入的文件。</param>
            <param name="contents">要写入文件的字符串数组。</param>
            <param name="encoding">一个 Encoding 对象，表示应用于字符串数组的字符编码。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.WriteAllLines(System.String,System.String[],System.Text.Encoding,System.Boolean)">
            <summary>
            创建一个新文件，使用指定的编码在其中写入指定的字符串数组，然后关闭文件。如果目标文件已存在，则改写该文件。
            </summary>
            <param name="path">要写入的文件。</param>
            <param name="contents">要写入文件的字符串数组。</param>
            <param name="encoding">一个 Encoding 对象，表示应用于字符串数组的字符编码。</param>
            <param name="autoCreateDir">如果目录不存在，自动创建目录。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            创建一个新文件，使用指定的编码在其中写入指定的字符串数组，然后关闭文件。如果目标文件已存在，则改写该文件。
            </summary>
            <param name="path">要写入的文件。</param>
            <param name="contents">要写入文件的字符串数组。</param>
            <param name="encoding">一个 Encoding 对象，表示应用于字符串数组的编码。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.WriteAllText(System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            创建一个新文件，使用指定的编码在其中写入指定的字符串数组，然后关闭文件。如果目标文件已存在，则改写该文件。
            </summary>
            <param name="path">要写入的文件。</param>
            <param name="contents">要写入文件的字符串数组。</param>
            <param name="encoding">一个 Encoding 对象，表示应用于字符串数组的编码。</param>
            <param name="autoCreateDir">如果目录不存在，自动创建目录。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.WriteAllText(System.String,System.String)">
            <summary>
            创建一个新文件，使用指定的编码在其中写入指定的字符串数组，然后关闭文件。如果目标文件已存在，则改写该文件。
            </summary>
            <param name="path">要写入的文件。</param>
            <param name="contents">要写入文件的字符串数组。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.WriteAllText(System.String,System.String,System.Boolean)">
            <summary>
            创建一个新文件，使用指定的编码在其中写入指定的字符串数组，然后关闭文件。如果目标文件已存在，则改写该文件。
            </summary>
            <param name="path">要写入的文件。</param>
            <param name="contents">要写入文件的字符串数组。</param>
            <param name="autoCreateDir">如果目录不存在，自动创建目录。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.Delete(System.String)">
            <summary>
            删除指定的文件。如果指定的文件不存在，则不引发异常
            </summary>
            <param name="path">要删除的文件的名称。</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.Exists(System.String)">
            <summary>
            确定指定的文件是否存在。
            </summary>
            <param name="path">要检查的文件。</param>
            <returns>如果调用方具有要求的权限并且 path 包含现有文件的名称，则为 true；否则为 false。如果 path 为 空引用（在 Visual Basic 中为 Nothing）、无效路径或零长度字符串，则此方法也将返回 false。如果调用方不具有读取指定文件所需的足够权限，则不引发异常并且该方法返回 false，这与 path 是否存在无关。 </returns>
            <remarks>不应使用 Exists 方法来验证路径，此方法仅检查 path 中指定的文件是否存在。将无效路径传递到 Exists 将返回 false。</remarks>
        </member>
        <member name="M:EC5.Utility.Web.WebFile.OpenRead(System.String)">
            <summary>
            打开现有文件以进行读取。
            </summary>
            <param name="path">要读取的文件。</param>
            <returns></returns>
        </member>
        <member name="T:EC5.Utility.Web.WebFileInfo">
            <summary>
            网络文件信息
            </summary>
        </member>
        <member name="M:EC5.Utility.Web.WebFileInfo.#ctor">
            <summary>
            网络文件信息
            </summary>
        </member>
        <member name="M:EC5.Utility.Web.WebFileInfo.#ctor(System.String,System.String)">
            <summary>
            网络文件信息
            </summary>
            <param name="relativeDirectory">相对路径</param>
            <param name="filename">文件名</param>
        </member>
        <member name="M:EC5.Utility.Web.WebFileInfo.#ctor(System.String)">
            <summary>
            网络文件信息
            </summary>
            <param name="relativePath">相对路径文件名</param>
        </member>
        <member name="P:EC5.Utility.Web.WebFileInfo.RelativeDir">
            <summary>
            相对目录
            </summary>
        </member>
        <member name="P:EC5.Utility.Web.WebFileInfo.Filename">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:EC5.Utility.Web.WebFileInfo.Extension">
            <summary>
            获取文件扩展名
            </summary>
        </member>
        <member name="P:EC5.Utility.Web.WebFileInfo.RelativePath">
            <summary>
            相对路径
            </summary>
        </member>
        <member name="P:EC5.Utility.Web.WebFileInfo.PhysicalDir">
            <summary>
            获取物理目录
            </summary>
        </member>
        <member name="P:EC5.Utility.Web.WebFileInfo.PhysicalPath">
            <summary>
            物理路径
            </summary>
        </member>
        <member name="M:EC5.Utility.Web.WebFileInfo.CreateDir">
            <summary>
            创建目录
            </summary>
        </member>
        <member name="T:EC5.Utility.Web.WebPath">
            <summary>
            (未完成)对包含文件或目录路径信息的 System.String 实例执行操作。这些操作是以跨平台的方式执行的。
            </summary>
        </member>
        <member name="M:EC5.Utility.Web.WebPath.GetDirectoryName(System.String)">
            <summary>
            回指定路径字符串的目录信息。
            </summary>
            <param name="path">文件或目录的路径。</param>
            <returns>包含 path 目录信息的 System.String；或者为 null（如果 path 表示根目录、是空字符串 ("") 或是 null）。
            如果path 没有包含目录信息，则返回 System.String.Empty。</returns>
            <exception cref="T:System.ArgumentException">path 参数包含无效字符、为空、或仅包含空白。</exception>
            <exception cref="T:System.IO.PathTooLongException">path 参数的长度超过系统定义的最大长度。</exception>
        </member>
        <member name="T:EC5.Utility.Web.WebUtil">
            <summary>
            Request 辅助功能
            </summary>
            <summary>
            Web 助手类
            </summary>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryInt(System.String,System.Int32)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryInt(System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryLong(System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryDateTime(System.String,System.DateTime)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryDateTime(System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryBool(System.String,System.Boolean)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryBool(System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.Query(System.String,System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryUpper(System.String,System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString 大写输出
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryLower(System.String,System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString 小写输出
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryUpper(System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString 大写输出
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryLower(System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString 小写输出
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryTrimLower(System.String,System.String)">
            <summary>
            从当前 System.String 对象移除所有前导空白字符和尾部空白字符。转换为小写
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryTrim(System.String)">
            <summary>
            从当前 System.String 对象移除所有前导空白字符和尾部空白字符。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryTrim(System.String,System.String)">
            <summary>
            从当前 System.String 对象移除所有前导空白字符和尾部空白字符。
            </summary>
            <param name="key"></param>
            <param name="defualtValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryTrimLower(System.String)">
            <summary>
            从当前 System.String 对象移除所有前导空白字符和尾部空白字符。转换为小写
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryTrimUpper(System.String,System.String)">
            <summary>
            从当前 System.String 对象移除所有前导空白字符和尾部空白字符。转换为大写
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryTrimUpper(System.String)">
            <summary>
            从当前 System.String 对象移除所有前导空白字符和尾部空白字符。转换为大写
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryBase64(System.String)">
            <summary>
            获取 Base64 解密后的原文
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.QueryBase64(System.String,System.String)">
            <summary>
            获取 Base64 解密后的原文
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.ToQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            获取查询的字符串
            </summary>
            <param name="nameValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.FormInt(System.String,System.Int32)">
            <summary>
            获取窗体变量集合。增强 Request.Form
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.FormInt(System.String)">
            <summary>
            获取窗体变量集合。增强 Request.Form
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.FormIntList(System.String)">
            <summary>
             获取窗体变量集合。增强 Request.Form
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.FormUpper(System.String,System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString 大写输出
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.FormLower(System.String,System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString 小写输出
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.FormUpper(System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString 大写输出
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.Utility.Web.WebUtil.FormLower(System.String)">
            <summary>
            获取 HTTP 查询字符串变量集合。增强 Request.QueryString 小写输出
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
    </members>
</doc>
