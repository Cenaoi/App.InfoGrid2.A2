$.format = function (e, t) { return arguments.length == 1 ? function () { var t = $.makeArray(arguments); return t.unshift(e), $.format.apply(this, t) } : (arguments.length > 2 && t.constructor != Array && (t = $.makeArray(arguments).slice(1)), t.constructor != Array && (t = [t]), $.each(t, function (t, n) { e = e.replace(new RegExp("\\{" + t + "\\}", "g"), n) }), e) }, String.prototype.startsWith = function (e) { return e == null ? !1 : this.substr(0, e.length) == e }, String.prototype.endWith = function (e) { return e == null ? !1 : this.substr(this.length - e.length) == e }, Date.prototype.format = function (e) { if (!e || e == "") e = "yyyy-MM-dd"; var t = this.getYear().toString(), n = (this.getMonth() + 1).toString(), r = this.getDate().toString(), i = e.replace(/[^y|Y]/g, ""); i.length == 2 && (t = t.substring(2, 4)); var s = e.replace(/[^m|M]/g, ""); s.length > 1 && n.length == 1 && (n = "0" + n); var o = e.replace(/[^d]/g, ""); return o.length > 1 && r.length == 1 && (r = "0" + r), e.replace(i, t).replace(s, n).replace(o, r) }, Date.prototype.toLongTimeString = function () { var e = this.getYear() + "-" + (this.getMonth() + 1) + "-" + this.getDate() + " " + this.getHours() + ":" + this.getMinutes() + ":" + this.getSeconds() + "." + this.getMilliseconds(); return e }, Mini = { version: "3.1" }, Mini.namespace = function () { var a = arguments, o = null, i, j, d, rt; for (i = 0; i < a.length; ++i) { d = a[i].split("."), rt = d[0], eval("if (typeof " + rt + ' == "undefined"){' + rt + " = {};} o = " + rt + ";"); for (j = 1; j < d.length; ++j) o[d[j]] = o[d[j]] || {}, o = o[d[j]] } }, Mini.ns = Mini.namespace, Mini.ns("Mini", "Mini.ui", "Mini.util", "Mini.ui.desings"), Mini.JsonHelper = {}, Mini.JsonHelper.toJson = function (e) { if (e == undefined) return ""; var t = []; if (typeof e == "string") return '"' + e.replace(/([\"\\])/g, "\\$1").replace(/(\n)/g, "\\n").replace(/(\r)/g, "\\r").replace(/(\t)/g, "\\t") + '"'; if (typeof e == "object") { if (!e.sort) { for (var n in e) t.push('"' + n + '":' + Mini.JsonHelper.toJson(e[n])); !!document.all && !/^\n?function\s*toString\(\)\s*\{\n?\s*\[native code\]\n?\s*\}\n?\s*$/.test(e.toString) && t.push("toString:" + e.toString.toString()), t = "{" + t.join() + "}" } else { for (var n = 0; n < e.length; n++) t.push(Mini.JsonHelper.toJson(e[n])); t = "[" + t.join() + "]" } return t } return e.toString().replace(/\"\:/g, '":""') }, Mini.globel = {}, Date.prototype.format = function (e) { if (!e || e == "") e = "yyyy-MM-dd"; var t = this.getYear().toString(), n = (this.getMonth() + 1).toString(), r = this.getDate().toString(), i = e.replace(/[^y|Y]/g, ""); i.length == 2 && (t = t.substring(2, 4)); var s = e.replace(/[^m|M]/g, ""); s.length > 1 && n.length == 1 && (n = "0" + n); var o = e.replace(/[^d]/g, ""); return o.length > 1 && r.length == 1 && (r = "0" + r), e.replace(i, t).replace(s, n).replace(o, r) }, Mini.util.DateHelper = function () { this.StartByToday = function () { var e = new Date; return e.format("yyyy-MM-dd") }, this.StartByMonth = function () { var e = new Date, t = new Date(e.getYear(), e.getMonth(), 1); return t.format("yyyy-MM-dd") }, this.StartByYear = function () { var e = new Date, t = new Date(e.getYear(), 0, 1); return t.format("yyyy-MM-dd") }, this.Today = function () { var e = new Date; return e.format("yyyy-MM-dd") } }, Mini.DateHelper = new Mini.util.DateHelper, Mini.ui.AutoCompleteBox = function (e) { }, Mini.ui.Template = function (e) { function h(e) { t = $.extend(t, e), n.id = t.id; var r = $("#" + t.id); r.length == 0 && alert("Template.js \nfunction init(options) 初始化错误,不存在 html 对象'" + t.id + "'"), i = r.parent(), o = $.createTemplate(r.html()), r.remove(), i.html(""); var u = $(i).closest("form"); if (u.length > 0) { var a = u[0], f = "<input type='hidden' name='" + t.id + "__ItemGudisBox__' value='' />"; s = $(f), $(a).append(s) } else { var f = "<input type='hidden' name='" + t.id + "__ItemGudisBox__' value='' />"; s = $(f), $("body").append(s) } } function p(e, t) { for (var n = 0; n < a.length; n++) { var r = a[n]; r(this, e, t) } } var t = { id: "", htmlTemplate: "" }, n = { id: "", itemGuid: "" }, r = 0, i, s, o, u = new Array, a = new Array, f = new Array, l = new Array, c = new Array; this.onItemsChanged = function () { for (var e = 0; e < c.length; e++) { var t = c[e]; t(this) } }, this.itemsChanged = function (e) { c.push(e) }, this.itemTemplate = function (e) { o = $.createTemplate(e); var t = new Array, n = $(i).children(); for (var r = 0; r < n.length; r++) t.push($(n[r]).data("itemData")); this.clear(), this.addItemRange(t) }, this.itemAdded = function (e) { a.push(e); var t = $(i).children(); try { for (var n = 0; n < t.length; n++) { var r = $(t[n]).data("TemplateItemGuid"); e(this, t[n], r) } } catch (s) { alert("Error: Template.js \n\n Template.itemAdded(fn) \n\n" + s.Message) } }, this.itemRemoved = function (e) { f.push(e) }; var d = function (e) { try { for (var t = 0; t < f.length; t++) { var n = f[t]; n(this, e) } } catch (r) { alert("Error: Template.js \n\n Template.itemRemoved(fn) \n\n" + r.Message) } }; this.itemRemoveing = function (e) { l.push(e) }; var v = function (e) { try { for (var t = 0; t < l.length; t++) { var n = l[t], r = n(this, e); if (r == 0) return !1 } } catch (i) { alert("Error: Template.js \n\n Template.itemRemoveing(fn) \n\n" + i.Message) } return !0 }; this.clear = function () { $(i).html(""), s.val(""), r = 0 }, this.addItem = function (e) { r++; try { n.itemGuid = t.id + "_Items_" + r + "_", n.guid = r; var u = o.get(e, n), a = $(u); $(i).append(a), $(a).attr("TemplateItem", "true"), $(a).data("TemplateItemGuid", r), $(a).data("itemData", e); var f = s.val(); return f += "," + r, s.val(f), p(a, r), a } catch (l) { alert("Error: Template.js \n\n Template.addItem(data) \n\n" + l.Message) } }, this.addItemRange = function (e) { try { for (var t = 0; t < e.length; t++) { var n = e[t]; this.addItem(n) } } catch (r) { alert("Error: Template.js \n\n Template.addItemRange(data) \n\n" + r.Message) } }, this.getItemForGuid = function (e) { var t = $(i).children(), n = null; for (var r = 0; r < t.length; r++) { var s = t[r], o = $(s).data("TemplateItemGuid"); if (o == e) { n = s; break } } return n }, this.resetItem = function (e) { var t = this.getItemForGuid(e), r = $(t).data("itemData"), i = o.get(r, n), s = $(i); return $(t).replaceWith(s), $(s).attr("TemplateItem", "true"), $(s).data("TemplateItemGuid", e), $(s).data("itemData", r), s }, this.remoteAtGuid = function (e) { var t = $(i).children(), n = null; for (var r = 0; r < t.length; r++) { var s = t[r], o = $(s).data("TemplateItemGuid"); if (o == e) { n = s; break } } n != null && this.removeItem(n) }, this.removeAt = function (e) { var t = $(i).children(), n = $(t).get(e); if (n == undefined || n == null) return; this.removeItem(n) }, this.removeItem = function (e) { if (e == undefined || e == null) return; e.currentTarget && (e = e.currentTarget); var t = $(e).closest("[TemplateItem]"), n = $(t).data("TemplateItemGuid"), r = $(t).data("itemData"); r.state = "deleted"; if (!n || !r) { alert("发生严重错误，请报告技术员：黄伟钦！\n\nTEL:13242300623\r\n\r\n错误代码: Mini-10005"); return } if (l.length > 0) { var i = v({ item: t, itemData: r, itemGuid: n }); if (i == 0) return } d({ item: t, itemData: r, itemGuid: n }), $(t).remove(); var o = s.val(); o = o.replace("," + n, ""), s.val(o) }, this.itemCount = function () { var e = $(i).children(); return e.length }, this.getItems = function () { var e = $(i).children(); return e }, this.get = function (e) { var t = $(i).children().get(e); return t }, h(e) }, Mini.ui.Pagination = function (e) { function u(e) { n = $.extend(t, e), r = $("#" + n.id), r.length == 0 && alert("Pagination.js \nfunction init(options) 初始化错误,不存在 html 对象'" + n.id + "'") } function a() { return $.format(n.urlFormat, "0") } function f() { var e = n.curPage - 1; return e < 0 && (e = 0), $.format(n.urlFormat, e) } function l() { var e = n.curPage + 1; return e >= n.pageCount && (e = n.pageCount - 1), $.format(n.urlFormat, e) } function c() { return $.format(n.urlFormat, n.pageCount - 1) } var t = { id: "", itemTotal: 500, urlFormat: "pageIndex={0}", rowCount: 10, buttonCount: 10, curPage: 1, pageCount: 0, command: "", buttonText: { first: "First", prev: "Prev", next: "Next", last: "Last"} }, n = { id: "", itemTotal: 500, urlFormat: "pageIndex_{0}", rowCount: 10, buttonCount: 10, curPage: 0, pageCount: 0, command: "", buttonText: { first: "First", prev: "Prev", next: "Next", last: "Last"} }, r, i = 0, s = 0, o; this.click = function (e) { var t = r.children("a"); $(t).click(e), o = e }, this.reset = function (e) { for (var t in e) n[t] != undefined && (n[t] = e[t]); var u = $("#" + n.id + "_CurPIndex"); $(u).val(n.curPage); var h = n.itemTotal % n.rowCount; n.pageCount = (n.itemTotal - h) / n.rowCount, h > 0 && n.pageCount++, i = n.curPage - 4, s = n.curPage + 5, i < 0 && (i = 0), s >= n.pageCount && (s = n.pageCount - 1), r.html(""); var p = "<a href='{0}' command='{3}' commandParam='{2}' valid='false'>{1}</a>", d = n.buttonText; n.curPage > 0 ? r.append($.format(p, a(), d.first, 0, n.command)) : r.append($.format("<span class='disabled'>{0}</span>", d.first)), n.curPage > 0 ? r.append($.format(p, f(), d.prev, n.curPage - 1, n.command)) : r.append($.format("<span class='disabled'>{0}</span>", d.prev)); for (var t = i; t <= s; t++) { var v = $.format(n.urlFormat, t); t == n.curPage ? r.append($.format("<span class='current'>{0}</span>", t + 1)) : r.append($.format(p, v, t + 1, t, n.command)) } n.curPage < n.pageCount - 1 ? (r.append($.format(p, l(), d.next, n.curPage + 1, n.command)), r.append($.format(p, c(), d.last, n.pageCount - 1, n.command))) : (r.append($.format("<span class='disabled'>{0}</span>", d.next)), r.append($.format("<span class='disabled'>{0}</span>", d.last))); if (o) { var m = r.children("a"); $(m).click(o) } var g = n.curPage * n.rowCount, y = g + n.rowCount; y > n.itemTotal && (y = n.itemTotal), r.append($.format("当前记录 {0}--{1} 条,共 {2} 条记录", g + 1, y, n.itemTotal)) }, u(e) }, Mini.ui.SWFUpload = function (options) { function request() { var e = location.href, t = e.substring(e.indexOf("?") + 1, e.length).split("&"), n = ""; for (i = 0; j = t[i]; i++) n += j + "$$$"; return n } function init(e) { m_Options = $.extend(defaults, e), m_Options.File_Post_Name = e.ID, e.ID != undefined && e.FileProgressContainer == undefined && (m_Options.FileProgressContainer = e.ID + "_FileProgressContainer"), e.ID != undefined && e.ButtonID == undefined && (m_Options.ButtonID = e.ID + "_Button"), e.ID != undefined && e.TargetNameID == undefined && (m_Options.TargetNameID = e.ID), e.ID != undefined && e.SrcNameID == undefined && (m_Options.SrcNameID = e.ID + "_SrcName"); var t = { __SubEvent: "Uploader", __ReturnFormat: "script", __SubName: e.SubName, __Path: encodeURI(m_Options.AppRelativeVirtualPath), __CID: e.CID, __Query: request() }; e.params && (t.__Query += e.params); var n = { upload_url: m_Options.Upload_Url == "" ? "/Core/Mini/EcWidgetAction.aspx?" + $.param(t) : m_Options.Upload_Url, flash_url: "/Core/Scripts/SWFUpload/swfupload.swf", flash9_url: "/Core/Scripts/SWFUpload/swfupload_FP9.swf", file_post_name: m_Options.File_Post_Name, post_params: { ASPSESSID: m_Options.ASPSESSID }, file_size_limit: "1900000", file_types: "*", file_types_description: "All Files", file_upload_limit: 100, file_queue_limit: 0, custom_settings: { upload_target: m_Options.FileProgressContainer }, button_image_url: "/Core/Scripts/SWFUpload/images/XPButtonUploadText_61x22.png", button_width: "61", button_height: "22", button_placeholder_id: m_Options.ButtonID, button_text: '<span class="theFont">选择</span>', button_text_style: ".theFont { font-size: 12px; }", button_text_left_padding: "16", swfupload_preload_handler: preLoad, swfupload_load_failed_handler: loadFailed, file_queued_handler: function (e) { $("#" + m_Options.FileProgressContainer).show() }, file_queue_error_handler: fileQueueError, file_dialog_complete_handler: fileDialogComplete, upload_progress_handler: uploadProgress, upload_error_handler: uploadError, upload_success_handler: UploadSuccessHeandler, upload_complete_handler: uploadComplete, upload_start_handler: OnUploadStart, debug: !1 }; m_Swfu = new SWFUpload(n) } function OnUploadStart(e) { if (m_Event_UploadStart == null) return; m_Event_UploadStart(e) } function UploadSuccessHeandler(file, serverData) { try { eval(serverData) } catch (ex) { this.debug(ex) } } function uploadComplete(e) { try { if (this.getStats().files_queued > 0) this.startUpload(); else { var t = new FileProgress(e, this.customSettings.upload_target); t.setComplete(), t.setStatus("文件上传成功.."), t.toggleCancel(!1), setInterval(function () { $("#" + m_Options.FileProgressContainer).hide(500) }, 8e3) } } catch (n) { this.debug(n) } } var m_Swfu, defaults = { ID: "", FileProgressContainer: "FileProgressContainer", ButtonID: "spanButtonPlaceHolder", TargetNameID: "", SrcNameID: "", ASPSESSID: "", Upload_Url: "", File_Post_Name: "Filedata", AppRelativeVirtualPath: "" }, m_Options = { ID: "", FileProgressContainer: "FileProgressContainer", ButtonID: "spanButtonPlaceHolder", TargetNameID: "", SrcNameID: "", ASPSESSID: "", Upload_Url: "", File_Post_Name: "Filedata", AppRelativeVirtualPath: "" }; this.addPostParam = function (e, t) { m_Swfu.addPostParam(e, t) }; var m_Event_UploadStart = null; this.uploadStart = function (e) { m_Event_UploadStart = e }, init(options) }, Mini.ui.Fileupdate = function (e) { function r(e) { } var t = null, n = { file_types: "*.*", file_size_max: 1e5, file_queue_limit: 1 }; this.show = function () { t == null && (t = new SWFUpload({ upload_url: "/Core/SWFUpload/Upload.aspx", flash_url: "/Core/SWFUpload/swfupload.swf", flash_width: "100px", flash_height: "20px" })), t.selectFiles() }, r(e) }, Mini.ui.TreeView = function (e) { }, Mini.ui.Widget = function (ps) { function onSuccess() { for (var e = 0; e < m_EventSuccess.length; e++) { var t = m_EventSuccess[e]; t(this) } } function onError() { for (var e = 0; e < m_EventErrors.length; e++) { var t = m_EventErrors[e]; t(this) } } function ProSubmitBufter(formObj) { var textareList = $(formObj).find(":input"); for (var i = 0; i < textareList.length; i++) { var conObj = $(textareList).get(i), code = $(conObj).attr("SubmitBufore"); if (!code) continue; eval(code) } } function ProExData(e, t) { if (e == undefined) return; e.action ? t.__Action = e.action : e.command && (t.__Action = e.command), e.returnFormat && (t.__ReturnFormat = e.returnFormat), e.actionPs ? t.__ActionPs = e.actionPs : e.commandParam && (t.__ActionPs = e.commandParam), e.returnFormat != undefined && (t.__ReturnFormat = e.returnFormat), e.subName && (t.__SubName = e.subName), e.subEvent && (t.__SubEvent = e.subEvent) } this.ActionPath = "/Core/Mini/WidgetAction.aspx"; var m_EventSuccess = new Array, m_EventErrors = new Array, m_Params = { __Path: "", __CID: "", __PID: "", __IsUser: 1, __Lang: "", __WidgetPs: "", __Action: "", __ActionPs: "", __ReturnFormat: "", __IsPost: "1", __SubName: "", __SubEvent: "" }; this.item = function (e) { var t = m_Params.__CID + "_" + e, n = window[t]; return n }, this.success = function (e) { m_EventSuccess.push(e) }, this.error = function (e) { m_EventErrors.push(e) }, this.getValues = function (e) { var t = m_Params.__CID, n = t.length, r = null; e ? r = $(e) : r = $(":input"); var i = new Array, s = {}; for (var o = 0; o < r.length; o++) { var u = r[o], a = $(u).attr("id"); if (a.length <= n + 1 || a.substring(0, n) != t) continue; i.push(u); var f = a.substring(n + 1); if ($(u).attr("type") == "checkbox") { var l = $(u).attr("checked"); s[f] = l == undefined ? !1 : l } else s[f] = $(u).val() } return s }, this.setValues = function (e) { var t = m_Params.__CID; for (var n in e) { var r = e[n], i = t + "_" + n, s = $("#" + i); if (s.length == 0) continue; s.attr("type") == "checkbox" ? s.attr("checked", r) : s.val(r) } }, this.getWidgetParams = function (e) { if (e == undefined || e == null || e == "") return m_Params.__Action = "", m_Params.__Rum__ = Math.ceil(Math.random() * 1e3), m_Params; e.length && e[0].nodeName == "BUTTON" ? m_Params.__Action = e.attr("command") ? e.attr("command") : e[0].name : m_Params.__Action = e.attr("command"), m_Params.__ActionPs = e.attr("commandParam") ? e.attr("commandParam") : "", m_Params.__ReturnFormat = e.attr("returnFormat") ? e.attr("returnFormat") : m_Params.__ReturnFormat, m_Params.__Rum__ = Math.ceil(Math.random() * 1e3); var t = m_Params.__ActionPs; return t.startsWith("(") && t.endWith(")") && (m_Params.__ActionPs = "{" + t.substr(1, t.length - 2) + "}"), m_Params }, this.Invoke = function (owner) { owner = $(owner); var exPath = this.getWidgetParams(owner), options = { url: this.ActionPath + "?" + $.param(exPath), success: function (responseText, statusText, xhr, $form) { if (exPath.__ReturnFormat == "html") $(exPath.__PID).html(responseText); else try { eval(responseText) } catch (ex) { alert("错误\n\n" + ex.Message) } } }; $.get(options.url, null, options.success) }, this.getUrl = function (e, t) { var n = this.getWidgetParams(e); if (n.__Action == "" || n.__Action == undefined) n.__Action = t; var r = this.ActionPath + "?" + $.param(n); return r }, this.event = function (owner, formMethod, exData) { owner = $(owner); var formObjs = owner.closest("form"), loadingBoxId = owner.attr("loadingBoxId"); loadingBoxId == undefined && Mini.globel.loadingBoxId && (loadingBoxId = Mini.globel.loadingBoxId); if (formMethod == "post" && formObjs.length == 0) { alert("没有提供 Form 表单，无法提交!"); return } var formObj = formObjs[0]; ProSubmitBufter(formObj); var exPath = this.getWidgetParams(owner), eventSuccess = undefined, srcReturnFormat = exPath.__ReturnFormat; exData && (exData.commandParam != undefined ? exPath.__ActionPs = exData.commandParam : exData.actionPs != undefined && (exPath.__ActionPs = exData.actionPs), exData.command != undefined ? exPath.__Action = exData.command : exData.action != undefined && (exPath.__Action = exData.action), exData.__IsPost != undefined && (exPath.__IsPost = exData.__IsPost), exData.returnFormat != undefined && (exPath.__ReturnFormat = exData.returnFormat), exData.success != undefined && (eventSuccess = exData.success)); if (exPath.__Action == "" || exPath.__Action == undefined) { alert("没有提供 Command 命令参数，无法提交!"); return } typeof exPath.__ActionPs == "object" && (exPath.__ActionPs = Mini.JsonHelper.toJson(exPath.__ActionPs)), $(owner).enable(!1); var options = { url: this.ActionPath + "?" + $.param(exPath), success: function (responseText, statusText, xhr, $form) { $(owner).enable(!0); if (exPath.__ReturnFormat == "html") try { $(exPath.__PID).html(responseText), onSuccess() } catch (ex) { onError(), alert("浏览器脚本解析错误: \n\n" + ex.Message + "\n\n" + responseText) } else try { eval(responseText), onSuccess() } catch (ex) { onError(), alert("浏览器脚本解析错误: \n\n" + ex.Message + "\n\n" + responseText) } loadingBoxId != undefined && $("#" + loadingBoxId).hide() } }; eventSuccess != undefined && eventSuccess && (options.success = eventSuccess); var form_method = formMethod; return formMethod == undefined && $(owner).attr("form_method") && (form_method = $(owner).attr("form_method")), form_method == "get" ? $.get(options.url, null, options.success) : form_method == "post" ? $.post(options.url, null, options.success) : formObj.method == "post" ? $(formObj).ajaxSubmit(options) : $.get(options.url, null, options.success), m_Params.__ReturnFormat = srcReturnFormat, $(owner).enable(!0), !1 }; var m_WaitVisibleNum = 0; return this.submit = function (owner, exData) { owner != null && (owner = $(owner)); var formObjs, loadingBoxId; owner != null && owner.length > 0 && "FORM" == owner.get(0).tagName ? formObjs = owner : owner == null ? formObjs = $("form") : formObjs = owner.closest("form"), owner != null && (loadingBoxId = owner.attr("loadingBoxId"), loadingBoxId == undefined && Mini.globel.loadingBoxId && (loadingBoxId = Mini.globel.loadingBoxId)); if (formObjs.length == 0) { alert("没有提供 Form 表单，无法提交!"); return } var formObj = $(formObjs[0]); ProSubmitBufter(formObj); try { if (owner != null && owner.attr("valid") != "false") { var isValid = formObj.valid(); if (isValid == 0) return alert("您的资料未填写完整!\n\n无法提交!"), !1 } } catch (ex) { } var exPath = this.getWidgetParams(owner), eventSuccess; ProExData(exData, exPath), exData && exData.success != undefined && (eventSuccess = exData.success); if (exPath.__Action != "" && exPath.__Action != undefined || exPath.__SubName != "" && exPath.__SubName != undefined) { typeof exPath.__ActionPs == "object" && (exPath.__ActionPs = Mini.JsonHelper.toJson(exPath.__ActionPs)), owner != null && owner.length > 0 && "FORM" != owner.get(0).tagName && $(owner).enable(!1); var options = { url: this.ActionPath + "?" + $.param(exPath), success: function (responseText, statusText, xhr, $form) { owner != null && $(owner).enable(!0), loadingBoxId != "" && (m_WaitVisibleNum--, $("#" + loadingBoxId).hide()); if (exPath.__ReturnFormat == "html") try { $(exPath.__PID).html(responseText), onSuccess() } catch (ex) { onError(), alert("浏览器脚本解析错误: \n\n" + ex.Message + "\n\n" + responseText) } else try { eval(responseText), onSuccess() } catch (ex) { onError(), alert("浏览器脚本解析错误: \n\n" + ex.Message + "\n\n" + responseText) } } }; eventSuccess != undefined && eventSuccess && (options.success = eventSuccess), loadingBoxId != undefined && (m_WaitVisibleNum++, setTimeout(function () { m_WaitVisibleNum > 0 && $("#" + loadingBoxId).show() }, 500)); try { $(formObj).ajaxSubmit(options) } catch (ex) { alert(ex.Message) } return !1 } alert("没有提供 Command 命令参数，无法提交!"); return }, this.reset = function () { var e = $(owner).closest("form"); e.length > 0 && e[0].clearForm() }, this.init = function (e) { for (var t in e) m_Params[t] = e[t] }, this.init(ps), this }, Mini.ui.Window = function (e) { function u() { try { var e = navigator.appName, t = navigator.appVersion, n = t.split(";"), r = n[1].replace(/[ ]/g, ""); if (e == "Microsoft Internet Explorer" && r == "MSIE6.0") return "IE6"; if (e == "Microsoft Internet Explorer" && r == "MSIE7.0") return "IE7"; if (e == "Microsoft Internet Explorer" && r == "MSIE8.0") return "IE8"; if (e == "Microsoft Internet Explorer" && r == "MSIE9.0") return "IE9" } catch (i) { return "" } return "" } function a(e, t) { var n = t.size; $(s).width(o.width()), $(s).height(o.height()) } function f(e, t) { var n = t.size; $(s).width(o.width()), $(s).height(o.height()) } function l() { var e = window, t = 0; for (t = 0; t < 9; t++) { if (e.parent == e || e.parent == undefined) break; e = e.parent } return e } function h(e) { for (var t = 0; t < c.length; t++) { var n = c[t]; try { n(this, e) } catch (r) { alert("MiniHtml Error: Window.onClosed(...) \n\n" + r.Message) } } } function p(e) { n = $.extend(t, e), r = e.contentHtml } var t = { resizable: !0, stack: !0, width: 200, height: 150, modal: !0, title: "Window", autoOpen: !1 }, n = { resizable: !0, stack: !0, width: 200, height: 150, modal: !0, title: "Window", autoOpen: !1 }, r, i, s, o, c = new Array; this.closed = function (e) { c.push(e) }, this.close = function (e) { e == undefined && (e = {}); var t = window; h(e), t.curDialog.dialog("close") }, this.show = function () { var e = window; s = $(n.contentHtml), o = $("<div style='border:0px solid #000000;'></div>"), o.attr("title", n.title), n.resizeStop = a, n.create = f, i = $(o).dialog(n), curDialog = i, i.dialog("open"), o.append(s), s.curDialog = i; var t = $(s).get(0); t.contentWindow && (t.contentWindow.curDialog = i), $(s).width(o.width()), $(s).height(o.height()) }, this.getContentObj = function () { return s }, p(e) }, Mini.ui.Tooltip = function (e) { function t() { try { var e = navigator.appName, t = navigator.appVersion, n = t.split(";"), r = n[1].replace(/[ ]/g, ""); if (e == "Microsoft Internet Explorer" && r == "MSIE6.0") return "IE6"; if (e == "Microsoft Internet Explorer" && r == "MSIE7.0") return "IE7"; if (e == "Microsoft Internet Explorer" && r == "MSIE8.0") return "IE8"; if (e == "Microsoft Internet Explorer" && r == "MSIE9.0") return "IE9" } catch (i) { return "" } return "" } function n() { var e = t(); if (e == "IE9") return window; var n = window, r = 0; for (r = 0; r < 9; r++) { if (n.parent == n || n.parent == undefined) break; n = n.parent } return n } function r(e, t) { try { e.$.sticky(t) } catch (n) { alert(t) } } this.show = function (e) { var t = n(); t.Mini_Tooltop == undefined ? t.In.ready("mi.Tooltip", function () { r(t, e) }) : r(t, e) } }, window.Mini_Tooltop = new Mini.ui.Tooltip, Mini.ui.DropDownText = function (e) { function a(e) { n = $.extend(t, e), r = $("#" + n.id), s = r.find(".select:first"), o = r.find(".input:first"); if (n.width) { var i = parseInt(n.width); $(r).css("width", n.width), $(o).css("width", i - 20) } u = $(s).next(".Mini_DropDownPanel"), $(u).children("div").click(function () { $(o).val($(this).text()), $.powerFloat.hide() }); var a = window.curDialog != undefined ? -30 : 0; $(s).powerFloat({ width: n.width, height: 160, eventType: "click", offsets: { x: -parseInt(n.width) + 14, y: a }, target: $(u) }) } var t = { id: "", width: 130 }, n = { id: "", width: 130 }, r, i, s, o, u; this.width = function (e) { if (e == undefined) return n.width; var t = parseInt(e); n.width = e, n.width && ($(r).css("width", n.width), $(o).css("width", t - 20)) }, a(e) }, Mini.ui.DataGridView = function (e) { function v() { if (p == null) return; var e = p; e && e.hide && (e.isSetValue && e.isSetValue(!0), e.hide()), p = null } function m(e) { for (var t = 0; t < c.length; t++) { var n = c[t]; try { n(this, e) } catch (r) { alert("DataGridView.onFocusedChanged(...)   " + r.Message) } } } function g(e) { var n = t.lockedKey; if (n && n != "") { var r = e[n]; if (r == 1 || r == "1" || r == "Y" || r == 1 || r == "true") return !0 } return !1 } function y(e) { var t = $(e).data("itemData"), n = f.dataKeys, r; return n == "$P.guid" ? r = $(e).data("TemplateItemGuid") : r = t[n], r } function b(e) { var n = $(e).children("td[checkMode!='true']"); $(n).mousedown(function () { if ($(this).attr("checkMode") == "true") return; var n = f, r = $(this).parent("tr"), i = $(r).children("td[checkMode='true']:first"), l = $(i).index(), c = $(i).children(":checkbox"), p = $(r).parent().children(); $(p).each(function () { var e = $(this).children("td").eq(l).children(":checkbox"); e.removeAttr("checked") }), c.attr("checked", "true"); try { o && $(o).removeClass("Check"), s && $(s).removeClass("Check"); var d = $(r).children(".RowHeader"); $(d).addClass("Check"), $(r).addClass("Check"), o = $(d), s = r, a = $(r).index(), $("#" + t.id + "_FocusRowIndex").val(a) } catch (v) { alert("DataGridView.setCellFocusMousedownEvent();\n\n" + v.Message) } if ($(r).data("itemData") != undefined) { var g = "R" + $(e).data("TemplateItemGuid"), y = $(e).data("itemData"), b = n.dataKeys, w; b == "$P.guid" ? w = $(e).data("TemplateItemGuid") : w = y[b]; if (u != null && u == w) return; u = w, h = y, $(t.focusConId).val(w); if (t.fixedFields != "") { var E = y[t.fixedFields]; E != undefined ? $("#" + t.id + "_FixedRow").val(E) : $("#" + t.id + "_FixedRow").val("") } m({ tr: r, itemData: y, focusPk: w }) } }) } function S(e) { t = $.extend(t, e), f = { dataKeys: t.dataKeys, fixedFields: t.fixedFields, rows: {} }, l = { dataKeys: t.dataKeys, fixedFields: t.fixedFields, rows: {} }, $(window).scroll(function () { p && p.hide && (p.hide(), p = null) }); var n = $("#" + t.id).parent(".DataGridPanel"); $(n).scroll(function () { p && p.hide && (p.hide(), p = null) }) } var t = { id: "", dataStoreStatusId: "", selectedStatusId: "", focusConId: "", dataKeys: "", fixedFields: "", lockedKey: "", readOnly: !1 }, n, r, i = new Array, s = null, o = null, u = null, a = -1, f, l, c = new Array, h = null, p = null, d = {}; this.setColumnEditor = function (e, t) { d[e] = t }, this.getColumnEditor = function (e) { return d[e] }, this.setCurEditorControl = function (e) { if (p == e) return; try { p && p.hide && p.hide() } catch (t) { } p = e }, this.stopEditor = function () { if (p == null) return; var e = p; e && e.hide && (e.isSetValue && e.isSetValue(!0), e.hide()), p = null }, this.getLockedKey = function () { return t.lockedKey }, this.focusedChanged = function (e) { c.push(e) }, this.readOnly = function (e) { if (e == undefined) return t.readOnly; t.readOnly = e, e || this.stopEditor() }, this.clearDataStoreStatus = function () { f.rows = {}, t.dataStoreStatusId && t.dataStoreStatusId != "" && $(t.dataStoreStatusId).val(Mini.JsonHelper.toJson(f)) }, this.clearSelectedStatus = function () { l.rows = {}, t.selectedStatusId && t.selectedStatusId != "" && $(t.selectedStatusId).val(Mini.JsonHelper.toJson(l)) }, this.setDataStore = function (e) { f = e }, this.getDataStore = function () { return f }, this.getSelectedStoreID = function () { return t.selectedStatusId }, this.getSelectedStore = function () { return l }, this.getItems = function () { return n.getItems() }, this.getItem = function (e) { return n.itemCount() == 0 ? null : n.get(e) }, this.setItemFocus = function (e) { var t = n.itemCount(); if (t == 0) return; e >= t && (e = t - 1); var r = this.getItem(e); $(r).children("td:first").mousedown() }, this.fillDataStore = function () { var e = n.getItems(), r = f; r.rows || (r.rows = {}), this.stopEditor(), $(e).each(function () { var e = $(this).data("itemData"), t = r.dataKeys, n, i; n = y(this), i = "PK_" + n, r.rows[i] == undefined && (r.rows[i] = { state: "unchanged", pk: n, fs: {}, rowIndex: -1, cells: {} }); var s = r.rows[i]; for (var o in e) s.fs[o] = e[o] }), t.dataStoreStatusId && t.dataStoreStatusId != "" && $(t.dataStoreStatusId).val(Mini.JsonHelper.toJson(r)) }, this.setTemplate = function (e) { if ($(e).length == 0) { alert("DataGridView 模板错误! \n\n函数: DataGridView.setTemplate(...)"); return } this.stopEditor(), n = e, e.itemsChanged(function () { v(); try { var n = $("#" + t.id + " .empty_row:first"); e.itemCount && e.itemCount() == 0 ? $(n).show() : $(n).hide() } catch (r) { alert("DataGridView.setTemplate();\n\n" + r.Message) } }), e.itemAdded(function (e, t, n) { v(), b(t); var r = g($(t).data("itemData")); if (r) { var i = $(t).children(".RowHeader"); $(i).addClass("Locked") } }), e.itemRemoved(function (e, n) { v(); var r = f; r.rows || (r.rows = {}); var i = y(n.item), s = "PK_" + i; if (r.rows[s] == undefined) return; var o = r.rows[s]; o.state = "deleted", t.dataStoreStatusId && t.dataStoreStatusId != "" && $(t.dataStoreStatusId).val(Mini.JsonHelper.toJson(r)) }), e.onItemsChanged() }, this.itemAdded = function (e) { n.itemAdded(e) }, this.getFocusedRowPk = function () { return u }, this.getFocusedItemValue = function () { return $(t.focusConId).val() }, this.getFocusedItem = function () { return h }, this.getValueForStore = function (e) { var t = $(e.Row).children("[ColumnID=" + e.TargetColumnID + "]"), n = $(t).attr("DBField"), r = $(e.Row).data("itemData"); return r[n] }, this.setFixedValueForGuid = function (e, r, i) { var s = f, o = s.dataKeys, u = "PK_" + e, a = null; if (o != "$P.guid") { alert("未实现数据库主键作为表格的主键值!"); return } a = n.getItemForGuid(e); var l = $(a).children("[ColumnID=" + r + "]"); $(l).text(i); var c = $(a).data("itemData"); c[r] = i, s.rows[u] == undefined && (s.rows[u] = { state: "modified", pk: e, fs: {}, rowIndex: -1, cells: {} }); var p = s.rows[u]; if (p.state == "added" || p.state == "unchanged") p.state = "modified"; s.fixedFields != undefined && s.fixedFields != "" && s.fixedFields == r && (s.rows[u].fixedFs == undefined && (s.rows[u].fixedFs = {}), s.rows[u].fixedFs[s.fixedFields] = i); if (h == c && t.fixedFields != "") { var d = c[t.fixedFields]; d != undefined ? $("#" + t.id + "_FixedRow").val(d) : $("#" + t.id + "_FixedRow").val("") } t.dataStoreStatusId && t.dataStoreStatusId != "" && $(t.dataStoreStatusId).val(Mini.JsonHelper.toJson(s)) }, this.resetItem = function (e) { this.stopEditor(); var t = n.resetItem(e); b(t); var r = g($(t).data("itemData")); if (r) { var i = $(t).children(".RowHeader"); $(i).addClass("Locked") } o && $(o).removeClass("Check"), s && $(s).removeClass("Check"), o = null, h = null, u = null, s = null, a = -1 }, this.setCellValueForGuid = function (e, r, i) { var s = f, o = s.dataKeys, u = "PK_" + e, a = null; if (o != "$P.guid") { alert("未实现数据库主键作为表格的主键值!"); return } a = n.getItemForGuid(e); var l = $(a).children("[ColumnID=" + r + "]"); $(l).text(i); var c = $(a).data("itemData"); c[r] = i, s.rows[u] == undefined && (s.rows[u] = { state: "modified", pk: e, fs: {}, rowIndex: -1, cells: {} }); if (r == s.fixedFields) { var h = s.rows[u]; h.fixedFs == undefined && (h.fixedFs = {}), h.fixedFs[r] = i } var p = s.rows[u]; if (p.state == "added" || p.state == "unchanged") p.state = "modified"; p.fs[r] = i, s.fixedFields != undefined && s.fixedFields != "" && s.fixedFields == r && (s.rows[u].fixedFs == undefined && (s.rows[u].fixedFs = {}), s.rows[u].fixedFs[s.fixedFields] = i), t.dataStoreStatusId && t.dataStoreStatusId != "" && $(t.dataStoreStatusId).val(Mini.JsonHelper.toJson(s)) }, this.setValueForFoucsRow = function (e, n, r) { var i = s, o = h, u = $(i).children("[ColumnID=" + e + "]"); $(u).text(r), $(u).hasClass("Modified") == 0 && $(u).addClass("Modified"); var a = f; a.rows || (a.rows = {}); var l = y(i), c = "PK_" + l; a.rows[c] == undefined && (a.rows[c] = { state: "modified", pk: l, fs: {}, rowIndex: -1, cells: {} }, a.fixedFields != undefined && a.fixedFields != "" && (a.rows[c].fixedFs = {}, a.rows[c].fixedFs[a.fixedFields] = o[a.fixedFields])); var p = a.rows[c]; p.fs[n] = r; var o = $(i).data("itemData"); o[n] = r, t.dataStoreStatusId && t.dataStoreStatusId != "" && $(t.dataStoreStatusId).val(Mini.JsonHelper.toJson(a)) }, this.setValueForStore = function (e) { var n = $(e.Row).children("[ColumnID=" + e.TargetColumnID + "]"); $(n).text(e.Value); var r = $(e.Row).data("itemData"), i = $(n).attr("DBField"); r[i] = e.Value, $(n).hasClass("Modified") == 0 && $(n).addClass("Modified"); var s = f; s.rows || (s.rows = {}); var o = y(e.Row), u = "PK_" + o; s.rows[u] == undefined && (s.rows[u] = { state: "modified", pk: o, fs: {}, rowIndex: -1, cells: {} }); var a = s.rows[u]; a.fs[i] = e.Value, t.dataStoreStatusId && t.dataStoreStatusId != "" && $(t.dataStoreStatusId).val(Mini.JsonHelper.toJson(s)) }, this.showCellError = function (e, t) { try { var n = $("input[name='" + e + "']"); $(n).addClass("error") } catch (r) { alert("DataGridView.showCellError(...)\n\n" + r.Message) } }, this.onReset = function (e) { i.push(e) }, this.reset = function () { this.stopEditor(); for (var e = 0; e < i.length; e++) { var n = i[e]; n() } var r = window[t.id + "_InitEditorCell"]; r(), o && $(o).removeClass("Check"), s && $(s).removeClass("Check"), o = null, h = null, u = null, s = null, a = -1; if (f && f.rows) { var l = f.rows, c = Array(); for (var e in l) { var p = l[e]; p.state == "deleted" && c.push(e) } for (var e = 0; e < c.length; e++) { var p = c[e]; delete l[p] } } }, this.newRow = function () { this.stopEditor(); var e = {}, r = n.addItem(e); if (r == undefined) { alert("新建行错误!"); return } var i = $(r).data("TemplateItemGuid"), s = f, o = s.dataKeys, u; o == "$P.guid" && (u = i); var a = "PK_" + u; s.rows[a] == undefined && (s.rows[a] = { state: "added", pk: u, fs: {}, rowIndex: -1, cells: {}, fixedFs: {} }), t.dataStoreStatusId && t.dataStoreStatusId != "" && $(t.dataStoreStatusId).val(Mini.JsonHelper.toJson(s)); var l = window[t.id + "_InitEditorCell"]; return l(), n.onItemsChanged(), e }, this.itemsRemoveAll = function () { n.clear() }, this.removeFocusRow = function () { this.stopEditor(); var e = $("#" + t.id).children("tbody"), r = $(e).children("tr"), i = r.length; if (i == 0) return; var s = a, o = this.getFocusedRowPk(); this.removeRowsAtGuids([o]), n.onItemsChanged() }, this.removeRowsAtGuids = function (e) { this.stopEditor(); for (var r = 0; r < e.length; r++) { var i = e[r]; n.remoteAtGuid(i); var s = f, o = s.dataKeys, u; o == "$P.guid" ? u = i : u = itemData[o]; var a = "PK_" + u; if (s.rows[a] == undefined) continue; if (s.rows[a].state == "added") delete s.rows[a]; else { var l = s.rows[a]; l.state = "deleted" } } t.dataStoreStatusId && t.dataStoreStatusId != "" && $(t.dataStoreStatusId).val(Mini.JsonHelper.toJson(s)) }; var w = undefined, E; this.sort = function (e, n, r) { this.stopEditor(), r == undefined && (r = -1); var i = $.format("#{0}_Sort", t.id), s = $.format("#{0}_SortFIndex", t.id), o = $.format("#{0}_SortFIndexSrc", t.id), u = $.format("#{0}_SortMode", t.id), a = $(i), f = $(s), l = $(u), c = $(o); a.val(n), f.val(r), w != undefined && $(w).html(E), E = $(e).html(), w = e; var h = parseInt(c.val()); if (h != r) $(e).append("▼"); else { var p = l.val(); p == "DESC" ? $(e).append("▼") : $(e).append("▲") } widget1.submit(e, { subName: t.id, subEvent: "Sort" }) }, S(e) }, Mini.ui.EditorTextCell = function (e) {
    function l() { var e = i.val(); for (var t = 0; t < f.length; t++) { var n = f[t]; n(this, { value: e, ItemData: u.ItemData, DBField: u.DBField, Row: u.Row }) } } function c(e) { t = $.extend(t, e), p(t.box) } function h() { if (a) return; a = !0; var e = i.val(), r = u.ItemData[u.DBField]; if (r == undefined && e == "" || r == e) return; $(s).text(e), $(s).hasClass("Modified") == 0 && $(s).addClass("Modified"); var o = n; o.rows || (o.rows = {}); var f = o.dataKeys, c; f == "$P.guid" ? c = $(u.Row).data("TemplateItemGuid") : c = u.ItemData[f]; var h = "PK_" + c; o.rows[h] == undefined && (o.rows[h] = { state: "modified", pk: c, fs: {}, rowIndex: -1, cells: {} }, o.fixedFields != undefined && o.fixedFields != "" && (o.rows[h].fixedFs = {}, o.rows[h].fixedFs[o.fixedFields] = u.ItemData[o.fixedFields])); var p = o.rows[h]; p.fs[u.DBField] = e, u.ItemData[u.DBField] = e, t.dataStoreStatusId && t.dataStoreStatusId != "" && $("#" + t.dataStoreStatusId).val(Mini.JsonHelper.toJson(o)), l() } function p(e) {
        i = $("<input type='text' style='display:none;position: fixed; top: 100px; left: 100px;z-index: 999;' />"), $(e).append(i), $(i).css
("ime-mode", t.imeMode), $(i).keydown(function () { if (event.keyCode == 114) { var e = new Date; $(i).val(e.toLongTimeString()), event.keyCode = 0, event.returnValue = !1 } }), $(i).keyup(function () { event.keyCode == 13 && (h(), i.hide(), o = 0) }), $(i).blur(function () { o--, o <= 0 && (i.hide(), s != null && h()) }), $(i).keydown(function () { })
    } function d(e) { if (r) { var t = r.getLockedKey(); if (t) { var n = e[t]; typeof n == "string" && (n = n.toLowerCase()); if (n == "1" || n == "Y" || n == 1 || n == "true" || n == 1) return !0 } } return !1 } var t = { type: "text", defaultValue: "", box: document.body, dataStoreStatusId: "", imeMode: "auto" }, n = {}, r, i, s = null, o = 0, u = { RowGuid: "", ItemData: {}, DBField: "", SrcValue: "", Row: undefined }, a = !1, f = new Array; this.textChanged = function (e) { f.push(e) }, this.val = function (e) { if (e == undefined) return i.val(); i.val(e) }, this.setDataStore = function (e) { n = e }, this.setGridView = function (e) { r = e, n = e.getDataStore() }, this.hide = function () { h(), i.hide(), o = 0 }, this.show = function (e) { if (r && r.readOnly && r.readOnly()) { r.stopEditor(); return } o++, s != null && s != e && h(), a = !1, s = e, r && r.setCurEditorControl && r.setCurEditorControl(i); var t = $(e).parent("tr"), n = ""; u.Row = t; if ($(t).data("itemData")) { u.RowGuid = "R" + $(t).data("TemplateItemGuid"); var f = $(t).data("itemData"), l = $(e).attr("DBField"), c = $(e).attr("ColumnID"); l == "" && c != "" && (l = c), u.DBField = l, u.ItemData = f, n = f[l]; if (d(f)) { s = null, i.hide(), o = 0; return } } else n = $(e).text(); m_SrcValue = n, i.val(n), i.show(), i.offset($(e).offset()), i.css("width", $(e).width()), i.css("height", $(e).height()), setTimeout(function () { i.select(), i.focus() }, 10) }, c(e)
}, Mini.ui.EditorSelectCell = function (e) { function f(e) { t = $.extend(t, e), v(t.box) } function c(e) { var i = n.ItemData[n.DBField]; if (i == e) return; var s = r; s.rows || (s.rows = {}); var u = s.dataKeys, a; u == "$P.guid" ? a = $(n.Row).data("TemplateItemGuid") : a = n.ItemData[u]; if (a == undefined) return; var f = "PK_" + a; s.rows[f] == undefined && (s.rows[f] = { state: "modified", pk: a, fs: {} }, s.fixedFields != undefined && s.fixedFields != "" && (s.rows[f].fixedFs = {}, s.rows[f].fixedFs[s.fixedFields] = n.ItemData[s.fixedFields])); var l = s.rows[f]; l.fs[n.DBField] = e, n.ItemData[n.DBField] = e, $(o).hasClass("Modified") == 0 && $(o).addClass("Modified"), t.dataStoreStatusId && t.dataStoreStatusId != "" && $("#" + t.dataStoreStatusId).val(Mini.JsonHelper.toJson(s)) } function h(e, t) { function r(e, t) { n = e } var n; this.selectedChanged = function (e, t) { e(n, t) }, r(e, t) } function d() { for (var e = 0; e < a.length; e++) { var t = a[e]; p.selectedChanged(t, n) } } function v(e) { s = $("<select style='display:none;position: fixed; top: 100px; left: 100px;z-index: 999;'></select>"), $(e).append(s), $(s).change(function () { if (l == 0) return; var e = this.options[this.selectedIndex].value, t = this.options[this.selectedIndex].text; $(o).text(t), c(e), d() }), $(s).blur(function () { l--, l == 0 && s.hide() }) } function m() { s.html(""); var e = $("<option></option>"); s.append(e); for (var t = 0; t < u.length; t++) { var n = u[t]; if (typeof n == "object") { var e = $("<option></option>"); $(e).attr("value", n.value), $(e).text(n.text), s.append(e) } else { var e = $("<option></option>"); $(e).attr("value", n), $(e).text(n), s.append(e) } } } function g(e) { if (i) { var t = i.getLockedKey(); if (t) { var n = e[t]; typeof n == "string" && (n = n.toLowerCase()); if (n == "1" || n == "Y" || n == 1 || n == "true" || n == 1) return !0 } } return !1 } var t = { type: "text", defaultValue: "", box: document.body, dataStoreStatusId: "" }, n = { Row: undefined, Cell: undefined, RowGuid: "", ItemData: {}, DBField: "", SrcValue: "", ColumnID: "" }, r = {}, i, s, o = null, u = new Array, a = new Array; this.selectedChanged = function (e) { a.push(e) }, this.setGridView = function (e) { i = e, r = e.getDataStore() }, this.getDataView = function () { return i }, this.setDataStore = function (e) { r = e }, this.itemAdd = function (e) { u.push(e) }, this.setItems = function (e) { u = e }, this.itemClear = function () { u = new Array }; var l = 0, p = new h(this, {}); this.show = function (e) { if (i && i.readOnly && i.readOnly()) { i.stopEditor(); return } l++, o = e, m(); var t = $(e).parent("tr"), r = ""; i && i.setCurEditorControl && i.setCurEditorControl(s); if ($(t).data("itemData")) { n.RowGuid = "R" + $(t).data("TemplateItemGuid"); var u = $(t).data("itemData"), a = $(e).attr("DBField"), f = $(e).attr("ColumnID"); a == "" && f != "" && (a = f), n.Row = t, n.Cell = e, n.ColumnID = f, n.DBField = a, n.ItemData = u, r = u[a]; if (g(u)) { o = null, s.hide(); return } } else r = $(e).text(); m_SrcValue = r, s.val(r), s.show(), s.offset($(e).offset()), s.css("width", $(e).width()); var c = $(e).height(); c < 20 && (c = 20), s.css("height", c), setTimeout(function () { s.select(), s.focus() }, 50) }, f(e) }, Mini.ui.Select2Box = function (e) { function a(e) { for (var t = 0; t < u.length; t++) { var n = u[t]; n(e) } } function l() { for (var e = 0; e < f.length; e++) var t = f[e] } function c(e) { t = $.extend(t, e); var o = '<div class="selectDiv" style="position: fixed;display:none; top: 100px; left: 100px;"><select class="select" style="width: 200px; "></select><input class="input" type="text" /></div>'; n = $(o), r = $(n).children(".select"), i = $(n).children(".input"), n.attr("guid", s), r.attr("guid", s), i.attr("guid", s); var u = $(r).width(); $(i).css({ position: "absolute", left: "2px", top: "2px", "z-index": "2", width: u - 18, "vertical-align": "middle", border: "none" }), $(r).css({ position: "relative", "z-index": "1", right: "0", "vertical-align": "middle" }), $(r).change(function () { var e = $(this).find("option:selected"); $(i).val(e.text()), setTimeout(function () { $(i).select(), $(i).focus() }, 10), l() }), $(i).keyup(function () { event.keyCode == 13 && h(), a(event) }), $(i).blur(function () { var e; event.currentTarget ? e = $(event.currentTarget) : e = $(document.activeElement); if (e.attr("guid") == s) return; h() }), $(r).blur(function () { var e; event.currentTarget ? e = $(event.currentTarget) : e = $(document.activeElement); if (e.attr("guid") == s) return; h(), l() }) } function h() { for (var e = 0; e < o.length; e++) { var t = o[e]; try { t() } catch (n) { alert("EdirorSelect2Cell.onBlur(...)   " + n.Message) } } } var t = {}, n, r = $(n).children(".select"), i = $(n).children(".input"), s = parseInt(Math.random() * 1e7 + 1); this.getObject = function () { return n }; var o = new Array, u = new Array; this.keyup = function (e) { u.push(e) }; var f = new Array; this.selectedChanged = function (e) { f.push(e) }, this.css = function (e, t) { $(n).css(e, t) }, this.blur = function (e) { o.push(e) }, this.width = function (e) { if (!e) return $(n).width(); $(n).width(e), $(r).css({ width: e }), $(i).css({ width: e - 18 }) }, this.height = function (e) { if (!e) return $(n).height(); $(n).height(e), $(i).css({ height: e - 4 }), $(r).css({ height: e }) }, this.select = function () { i.select() }, this.focus = function () { i.focus() }, this.show = function () { $(n).show() }, this.hide = function () { $(n).hide() }, this.offset = function (e) { $(n).offset(e) }, this.val = function (e) { if (e == undefined) return i.val(); i.val(e) }, this.html = function (e) { r.html(e) }, this.append = function (e) { r.append(e) }, c(e) }, Mini.ui.EditorSelect2Cell = function (e) { function f(e, t) { function r(e, t) { n = e } var n; this.selectedChanged = function (e, t) { e(n, t) }, r(e, t) } function c() { for (var e = 0; e < a.length; e++) { var t = a[e]; l.selectedChanged(t, n) } } function h(e) { t = $.extend(t, e), g(t.box) } function m(e) { var i = n.ItemData[n.DBField]; if (i == e) return; var s = r; s.rows || (s.rows = {}); var u = s.dataKeys, a; u == "$P.guid" ? a = $(n.Row).data("TemplateItemGuid") : a = n.ItemData[u]; if (a == undefined) return; var f = "PK_" + a; s.rows[f] == undefined && (s.rows[f] = { state: "modified", pk: a, fs: {} }, s.fixedFields != undefined && s.fixedFields != "" && (s.rows[f].fixedFs = {}, s.rows[f].fixedFs[s.fixedFields] = n.ItemData[s.fixedFields])); var l = s.rows[f]; l.fs[n.DBField] = e, n.ItemData[n.DBField] = e, $(o).hasClass("Modified") == 0 && $(o).addClass("Modified"), t.dataStoreStatusId && t.dataStoreStatusId != "" && $("#" + t.dataStoreStatusId).val(Mini.JsonHelper.toJson(s)) } function g(e) { s = new Mini.ui.Select2Box, $(e).append(s.getObject()), s.selectedChanged(function () { var e = s.val(); m(e), c() }), s.css("ime-mode", t.imeMode), s.blur(function () { v--, v == 0 && s.hide(); var e = s.val(); $(o).text(e), o != null && m(e) }), s.keyup(function () { if (event.keyCode == 13) { var e = s.val(); m(e), v = 0, s.hide(), event.keyCode = 0, event.returnValue = !1 } }) } function y() { s.html(""); var e = $("<option></option>"); s.append(e); for (var t = 0; t < u.length; t++) { var n = u[t]; if (typeof n == "object") { var e = $("<option></option>"); $(e).attr("value", n.value), $(e).text(n.text), s.append(e) } else { var e = $("<option></option>"); $(e).attr("value", n), $(e).text(n), s.append(e) } } } function b(e) { if (i) { var t = i.getLockedKey(); if (t) { var n = e[t]; typeof n == "string" && (n = n.toLowerCase()); if (n == "1" || n == "Y" || n == 1 || n == "true" || n == 1) return !0 } } return !1 } var t = { type: "text", defaultValue: "", box: document.body, dataStoreStatusId: undefined, imeMode: "auto" }, n = { Row: undefined, Cell: undefined, RowGuid: "", ItemData: {}, DBField: "", SrcValue: "", ColumnID: "" }, r = {}, i, s, o = null, u = new Array, a = new Array; this.selectedChanged = function (e) { a.push(e) }; var l = new f(this, {}); this.setGridView = function (e) { i = e, r = e.getDataStore() }, this.getDataView = function () { return i }, this.itemAdd = function (e) { u.push(e) }, this.setItems = function (e) { u = e }, this.itemClear = function () { u = new Array }; var p = new Date, d = new Date, v = 0; this.show = function (e) { if (i && i.readOnly && i.readOnly()) { i.stopEditor(); return } v++; if (e != o) { var t = s.val(); $(o).text(t), m(t) } o = e, y(); var r = $(e).parent("tr"), u = ""; i && i.setCurEditorControl && i.setCurEditorControl(s); if ($(r).data("itemData")) { n.RowGuid = "R" + $(r).data("TemplateItemGuid"); var a = $(r).data("itemData"), f = $(e).attr("DBField"), l = $(e).attr("ColumnID"); f == "" && l != "" && (f = l), n.Row = r, n.Cell = e, n.ColumnID = l, n.DBField = f, n.ItemData = a, u = a[f]; if (b(a)) { v = 0, o = null, s.hide(); return } } else u = $(e).text(); m_SrcValue = u, s.val(u), s.show(), s.offset($(e).offset()), s.width($(e).width()); var c = $(e).height(); c < 20 && (c = 20), s.height(c), setTimeout(function () { s.select(), s.focus() }, 10) }, h(e) }, Mini.ui.EditorCheckBoxCell = function (e) { function f(e) { t = $.extend(t, e) } function l(e) { if (r) { var t = r.getLockedKey(); if (t) { var n = e[t]; typeof n == "string" && (n = n.toLowerCase()); if (n == "1" || n == "Y" || n == 1 || n == "true" || n == 1) return !0 } } if (r && r.readOnly && r.readOnly()) return; return !1 } function c(e, r) { var i = $(e).parent("td"), s = $(i).parent("tr"), r = ""; u.Row = s; if ($(s).data("itemData")) { u.RowGuid = "R" + $(s).data("TemplateItemGuid"); var o = $(s).data("itemData"), a = $(e).attr("DBField"); u.DBField = a, u.ItemData = o, r = $(e).attr("checked") == "checked"; if (l(o)) { var f = u.ItemData[u.DBField]; f ? $(e).attr("checked", "checked") : $(e).removeAttr("checked"); return } } else r = $(e).text(); var f = u.ItemData[u.DBField], c = n; c.rows || (c.rows = {}); var h = c.dataKeys, p, d; h == "$P.guid" ? p = $(u.Row).data("TemplateItemGuid") : p = u.ItemData[h], d = "PK_" + p, c.rows[d] == undefined && (c.rows[d] = { state: "modified", pk: p, fs: {} }, c.fixedFields != undefined && c.fixedFields != "" && (c.rows[d].fixedFs = {}, c.rows[d].fixedFs[c.fixedFields] = u.ItemData[c.fixedFields])); var v = c.rows["PK_" + p]; u.DBField != "$P.guid" ? (v.fs[u.DBField] = r, u.ItemData[u.DBField] = r) : v.checked = r, t.dataStoreStatusId && t.dataStoreStatusId != "" && $("#" + t.dataStoreStatusId).val(Mini.JsonHelper.toJson(c)) } function h(e) { i = $('<input type="checkbox" />'), $(e).append(i), $(i).keyup(function () { event.keyCode == 13 && (c(), i.hide()) }), $(i).blur(function () { o--, o == 0 && (c(), i.hide()) }) } var t = { type: "text", defaultValue: "", box: document.body, dataStoreStatusId: "" }, n = {}, r, i, s = null, o = 0, u = { Row: undefined, Cell: undefined, RowGuid: "", ItemData: {}, DBField: "", SrcValue: "", ColumnID: "" }, a = !1; this.setDataStore = function (e) { n = e }, this.setGridView = function (e) { r = e, n = e.getDataStore() }, this.bind = function (e) { $(e).change(function () { var e = $(this).attr("checked"); alert(e) }) }, this.click = function (e) { var t = $(e).attr("checked"); c(e, t) }, this.show = function (e) { if (r && r.readOnly && r.readOnly()) { r.stopEditor(); return } o++, s && s != e && c(), a = !1, s = e; var t = $(e).parent("tr"), n = ""; r && r.setCurEditorControl && r.setCurEditorControl(i); if ($(t).data("itemData")) { u.RowGuid = "R" + $(t).data("TemplateItemGuid"); var f = $(t).data("itemData"), l = $(e).attr("DBField"), h = $(e).attr("ColumnID"); l == "" && h != "" && (l = h), u.DBField = l, u.ItemData = f, n = f[l] } else n = $(e).text() }, f(e) }, Mini.ui.EditorDateCell = function (e) { function c(e) { t = $.extend(t, e), p(t.box) } function h(e) { if (l) return; l = !0; var n = f.ItemData[f.DBField]; if (n == e) return; $(o).text(e), $(o).hasClass("Modified") == 0 && $(o).addClass("Modified"); var i = r; i.rows || (i.rows = {}); var s = i.dataKeys, u; s == "$P.guid" ? u = $(f.Row).data("TemplateItemGuid") : u = f.ItemData[s]; var a = "PK_" + u; i.rows[a] == undefined && (i.rows[a] = { state: "modified", pk: u, fs: {} }, i.fixedFields != undefined && i.fixedFields != "" && (i.rows[a].fixedFs = {}, i.rows[a].fixedFs[i.fixedFields] = f.ItemData[i.fixedFields])); var c = i.rows[a]; c.fs[f.DBField] = e, f.ItemData[f.DBField] = e, t.dataStoreStatusId && t.dataStoreStatusId != "" && $("#" + t.dataStoreStatusId).val(Mini.JsonHelper.toJson(i)) } function p(e) { s = $("<div style='position: fixed;display:none; top: 100px; left: 100px;'><input class='input' type='text' /></div>"), $(e).append(s), a = $(s).children(".input:first"), $(a).css("ime-mode", t.imeMode), a.datepicker({ showOn: "button", dateFormat: "yy-mm-dd", showButtonPanel: !0, changeMonth: !0, changeYear: !0, buttonImageOnly: !1, showOptions: { direction: "" }, onSelect: function (e, t) { t.inline = !1, h(e) } }), $(s).attr("guid", n), $(s).children().attr("guid", n), a.datepicker("option", $.datepicker.regional["zh-CN"]), $(a).keyup(function () { event.keyCode == 13 && (u--, o != null && h(a.val()), s.hide()) }), $(s).children().blur(function () { var e; event.currentTarget ? e = $(event.currentTarget) : e = $(document.activeElement); if (e.attr("guid") == n) return; u--, u == 0 && s.hide() }) } function d(e) { if (i) { var t = i.getLockedKey(); if (t) { var n = e[t]; typeof n == "string" && (n = n.toLowerCase()); if (n == "1" || n == "Y" || n == 1 || n == "true" || n == 1) return !0 } } return !1 } var t = { type: "text", defaultValue: "", box: document.body, dataStoreStatusId: "", imeMode: "auto" }, n = parseInt(Math.random() * 1e7 + 1), r = {}, i, s, o = null, u = 0, a, f = { Row: undefined, Cell: undefined, RowGuid: "", ItemData: {}, DBField: "", SrcValue: "", ColumnID: "" }, l = !1; this.setGridView = function (e) { i = e, r = e.getDataStore() }, this.setDataStore = function (e) { r = e }, this.show = function (e) { if (i && i.readOnly && i.readOnly()) { i.stopEditor(); return } u++, l = !1, o = e; var t = $(e).parent("tr"), n = ""; i && i.setCurEditorControl && i.setCurEditorControl(s); if ($(t).data("itemData")) { f.RowGuid = "R" + $(t).data("TemplateItemGuid"); var r = $(t).data("itemData"), c = $(e).attr("DBField"), h = $(e).attr("ColumnID"); c == "" && h != "" && (c = h), f.Row = t, f.Cell = e, f.ColumnID = h, f.DBField = c, f.ItemData = r, n = r[c]; if (d(r)) { o = null, s.hide(); return } } else n = $(e).text(); m_SrcValue = n, a.val(n), s.show(), s.offset($(e).offset()), s.css("width", $(e).width() + 60), s.css("height", $(e).height()), a.css("width", $(e).width()), setTimeout(function () { }, 10) }, c(e) }, Mini.ui.EditorTextButtonCell = function (e) { function p(e, t) { function r(e, t) { n = e } var n; this.click = function (e, t) { e(n, t) }, r(e, t) } function v() { c.val = function (e) { i.val(e) }; for (var e = 0; e < o.length; e++) { var t = o[e]; d.click(t, c) } } function m(e) { t = $.extend(t, e), b(t.box) } function g(e) { if (a) { var t = a.getLockedKey(); if (t) { var n = e[t]; typeof n == "string" && (n = n.toLowerCase()); if (n == "1" || n == "Y" || n == 1 || n == "true" || n == 1) return !0 } } return !1 } function y() { if (h) return; h = !0; var e = $(i).val(), n = c.ItemData[c.DBField]; if (n == e) return; $(l).text(e), $(l).hasClass("Modified") == 0 && $(l).addClass("Modified"); var r = u; r.rows || (r.rows = {}); var s = r.dataKeys, o; s == "$P.guid" ? o = $(c.Row).data("TemplateItemGuid") : o = c.ItemData[s]; var a = "PK_" + o; c.ItemData[c.DBField] = e, r.rows[a] == undefined && (r.rows[a] = { state: "modified", pk: o, fs: {}, rowIndex: -1, cells: {} }, r.fixedFields != undefined && r.fixedFields != "" && (r.rows[a].fixedFs = {}, r.rows[a].fixedFs[r.fixedFields] = c.ItemData[r.fixedFields])); var f = r.rows[a]; f.fs[c.DBField] = e, t.dataStoreStatusId && t.dataStoreStatusId != "" && $("#" + t.dataStoreStatusId).val(Mini.JsonHelper.toJson(r)) } function b(e) { var o = '<div class="selectDiv" style="position: fixed;display:none; top: 100px; left: 100px;"><table cellspacing="0" cellpadding="0" border="0"><tr><td><input class="input" type="text" /></td><td><button class="select" style=" width: 24px; height: 24px">…</button></td></tr></table></div>'; n = $(o), $(e).append(n), i = $(n).find(".input:first"), r = $(n).find(".select:first"), $(i).css("ime-mode", t.imeMode), n.attr("guid", s), $(i).keydown(function () { event.keyCode == 13 && (y(), n.hide(), f = 0) }), $(i).blur(function () { l != null && y(); var e; event.currentTarget ? e = $(event.currentTarget) : e = $(document.activeElement); if (e.attr("guid") == s) return; f--, f <= 0 && n.hide() }), r.attr("guid", s), r.click(v), i.attr("guid", s) } var t = { type: "text", defaultValue: "", box: document.body, dataStoreStatusId: "", imeMode: "auto" }, n, r, i, s = parseInt(Math.random() * 1e7 + 1), o = new Array, u = {}, a, f = 0, l = undefined, c = { Row: undefined, Cell: undefined, RowGuid: "", ItemData: {}, DBField: "", SrcValue: "", ColumnID: "" }, h = !1; this.buttonClick = function (e) { o.push(e) }; var d = new p(this, {}); this.getObject = function () { return n }, this.setGridView = function (e) { a = e, u = e.getDataStore() }, this.getDataView = function () { return a }, this.val = function (e) { if (e == undefined) return i.val(); i.val(e) }, this.width = function (e) { if (e == undefined) return $(n).width(); $(n).width(e), $(i).css({ width: e - 24 }) }, this.height = function (e) { if (e == undefined) return $(n).height(); $(n).css({ height: e }), $(i).css({ height: e }), $(r).css({ height: e }) }, this.hide = function () { n.hide() }, this.isSetValue = function (e) { h = e }, this.show = function (e) { if (a && typeof a.readOnly == "function" && a.readOnly()) { a.stopEditor(); return } $(n).css("display") == "none" && (f = 0, l = null), f++, l && l != e && (h = !1, y()), h = !1, l = e; var t = $(e).parent("tr"), r = ""; a && a.setCurEditorControl && a.setCurEditorControl(this); if ($(t).data("itemData")) { c.RowGuid = "R" + $(t).data("TemplateItemGuid"); var s = $(t).data("itemData"), o = $(e).attr("DBField"), u = $(e).attr("ColumnID"); o == "" && u != "" && (o = u), c.Row = t, c.Cell = e, c.ColumnID = u, c.DBField = o, c.ItemData = s, r = s[o]; if (g(s)) { f = 0, l = null, n.hide(); return } } else r = $(e).text(); m_SrcValue = r, this.val(r), n.show(), n.offset($(e).offset()), this.width($(e).outerWidth()); var p = $(e).height(); p < 12 && (p = 12), this.height(p), setTimeout(function () { i.select(), i.focus() }, 10) }, m(e) }, Mini.ui.SelectItemField = function (e) { function l(e) { t = $.extend(t, e) } function c(e) { if (i) { var t = i.getLockedKey(); if (t) { var n = e[t]; typeof n == "string" && (n = n.toLowerCase()); if (n == "1" || n == "Y" || n == 1 || n == "true" || n == 1) return !0 } } if (i && i.readOnly && i.readOnly()) return; return !1 } function h(e, r) { var i = $(e).closest("tr"), s = n; s.rows || (s.rows = {}); var o = $(i).data("itemData"), u = s.dataKeys, a = s.fixedFields, f, l = $(i).data("TemplateItemGuid"); a == "$P.guid" ? f = $(i).data("TemplateItemGuid") : f = o[a]; var c = "S" + l; r == "checked" ? s.rows[c] == undefined && (f == undefined && (f = ""), s.rows[c] = { guid: l, pk: f }) : s.rows[c] != undefined && delete s.rows[c], $("#" + t.colGuid).removeAttr("checked"), t.selectedStatusId && t.selectedStatusId != "" && $(t.selectedStatusId).val(Mini.JsonHelper.toJson(s)) } function p(e) { } var t = { type: "text", defaultValue: "", box: document.body, selectedStatusId: "", dataStoreStatusId: "", colGuid: "CXX", ownerAllId: "" }, n = { dataKeys: t.dataKeys, fixedFields: t.fixedFields, rows: {} }, r = { dataKeys: t.dataKeys, fixedFields: t.fixedFields, rows: {} }, i, s, o = null, u = 0, a = { Row: undefined, Cell: undefined, RowGuid: "", ItemData: {}, DBField: "", SrcValue: "", ColumnID: "" }, f = !1; this.setDataStore = function (e) { r = e }, this.setGridView = function (e) { i = e, r = e.getDataStore(), n = e.getSelectedStore(), t.selectedStatusId = e.getSelectedStoreID() }, this.bind = function (e) { $(e).change(function () { var e = $(this).attr("checked"); alert(e) }) }, this.click = function (e) { var t = $(e).attr("checked"); h(e, t) }, this.show = function (e) { }, this.clearAll = function () { $("#" + t.colGuid).removeAttr("checked"); var e = $(":checkbox[" + t.colGuid + "]"), r = $(t.ownerAllId).attr("checked") != undefined; $(e).removeAttr("checked"); var i = n; i.rows || (i.rows = {}), i.rows = {}, t.selectedStatusId && t.selectedStatusId != "" && $(t.selectedStatusId).val(Mini.JsonHelper.toJson(i)) }, this.CheckedAll = function (e) { var r = $(":checkbox[" + t.colGuid + "]"), s = $(e).attr("checked") != undefined; s ? $(r).attr("checked", "checked") : $(r).removeAttr("checked"); var o = i.getItems(), u = n; u.rows || (u.rows = {}), $(o).each(function () { var e = $(this).data("itemData"), t = u.dataKeys, n = u.fixedFields, r, i = $(this).data("TemplateItemGuid"); n == "$P.guid" ? r = $(this).data("TemplateItemGuid") : r = e[n]; var o = "S" + i; s ? u.rows[o] == undefined && (r == undefined && (r = ""), u.rows[o] = { guid: i, pk: r }) : u.rows[o] != undefined && delete u.rows[o] }), t.selectedStatusId && t.selectedStatusId != "" && $(t.selectedStatusId).val(Mini.JsonHelper.toJson(u)) }, l(e) }, Mini.ui.DataGrid = function (e) { function s(e) { t = $.extend(t, e) } var t = { id: "" }, n, r, i = new Array; this.showCellError = function (e, t) { try { var n = $("input[name='" + e + "']"); $(n).addClass("error") } catch (r) { alert("Mini.ui.DataGrid.showCellError(,,,);\n\n" + r.Message) } }, this.onReset = function (e) { i.push(e) }, this.reset = function () { for (var e = 0; e < i.length; e++) { var t = i[e]; t() } }, s(e) }, Mini.ui.EcView = function (e) { function r() { try { var e = navigator.appName, t = navigator.appVersion, n = t.split(";"), r = n[1].replace(/[ ]/g, ""); if (e == "Microsoft Internet Explorer" && r == "MSIE6.0") return "IE6"; if (e == "Microsoft Internet Explorer" && r == "MSIE7.0") return "IE7"; if (e == "Microsoft Internet Explorer" && r == "MSIE8.0") return "IE8"; if (e == "Microsoft Internet Explorer" && r == "MSIE9.0") return "IE9" } catch (i) { return "" } return "" } function i() { var e = window, t = 0; for (t = 0; t < 9; t++) { if (e.parent == e || e.parent == undefined) break; e = e.parent } return e } function s(e) { if (e.substr(0, 1) == "/") return e; var t = window.location.pathname, n = window.location.search, r = t.lastIndexOf("/"), i = t.substr(0, r + 1); while (e.length > 3 && e.substr(0, 3) == "../") r = i.lastIndexOf("/", i.length - 2), i = i.substr(0, r + 1), e = e.substr(3); var s = i + e; return s } var t, n; this.setShowEvent = function (e) { t = e }, this.setShowDialogEvent = function (e) { n = e }, this.show = function (e, t, n, r) { e = s(e); var o = i(); if (o.AddTab) { o.AddTab(e, t); return } n == undefined && (n = 800), r == undefined && (r = 600), window.open(e, t, "height=" + n + ",width=" + r + ",toolbar=no,menubar=no,scrollbars=no, resizable=no,location=no, status=no") }, this.showDialog = function (e, t, n, r, o) { n == undefined && (n = 800), r == undefined && (r = 600); var u = i(), a = s(e), f = "<iframe frameborder='0'  src='" + a + "' ></iframe>"; try { var l = new u.Mini.ui.Window({ title: t, contentHtml: f, width: n, height: r, modal: o }); return l.ownerWindow = window, l.show(), u.DialogEcView = l, l } catch (c) { alert("EcView.showDialog(...)\n\n" + c.Message) } }, this.close = function (e) { if (window.curDialog && window.curDialog.close) { window.curDialog.close(); return } var t = i(); if (t.DialogEcView) { var n = t.DialogEcView; e == undefined && (e = {}); try { var r = n.ownerWindow; n.close(e), t.DialogEcView = {} } catch (s) { alert("关闭窗体错误:" + s.Message) } return } if (t.RemoveTab) { var o = window.location.href; t.RemoveTab(o) } }, this.create = function () { var e = new Mini.ui.EcForm; return e } }; var EcView = new Mini.ui.EcView